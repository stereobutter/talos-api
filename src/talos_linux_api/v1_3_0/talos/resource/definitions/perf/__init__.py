# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: resource/definitions/perf/perf.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


@dataclass(eq=False, repr=False)
class CpuSpec(betterproto.Message):
    """CPUSpec represents the last CPU stats snapshot."""

    cpu: List["CpuStat"] = betterproto.message_field(1)
    cpu_total: "CpuStat" = betterproto.message_field(2)
    irq_total: int = betterproto.uint64_field(3)
    context_switches: int = betterproto.uint64_field(4)
    process_created: int = betterproto.uint64_field(5)
    process_running: int = betterproto.uint64_field(6)
    process_blocked: int = betterproto.uint64_field(7)
    soft_irq_total: int = betterproto.uint64_field(8)


@dataclass(eq=False, repr=False)
class CpuStat(betterproto.Message):
    """CPUStat represents a single cpu stat."""

    user: float = betterproto.double_field(1)
    nice: float = betterproto.double_field(2)
    system: float = betterproto.double_field(3)
    idle: float = betterproto.double_field(4)
    iowait: float = betterproto.double_field(5)
    irq: float = betterproto.double_field(6)
    soft_irq: float = betterproto.double_field(7)
    steal: float = betterproto.double_field(8)
    guest: float = betterproto.double_field(9)
    guest_nice: float = betterproto.double_field(10)


@dataclass(eq=False, repr=False)
class MemorySpec(betterproto.Message):
    """MemorySpec represents the last Memory stats snapshot."""

    mem_total: int = betterproto.uint64_field(1)
    mem_used: int = betterproto.uint64_field(2)
    mem_available: int = betterproto.uint64_field(3)
    buffers: int = betterproto.uint64_field(4)
    cached: int = betterproto.uint64_field(5)
    swap_cached: int = betterproto.uint64_field(6)
    active: int = betterproto.uint64_field(7)
    inactive: int = betterproto.uint64_field(8)
    active_anon: int = betterproto.uint64_field(9)
    inactive_anon: int = betterproto.uint64_field(10)
    active_file: int = betterproto.uint64_field(11)
    inactive_file: int = betterproto.uint64_field(12)
    unevictable: int = betterproto.uint64_field(13)
    mlocked: int = betterproto.uint64_field(14)
    swap_total: int = betterproto.uint64_field(15)
    swap_free: int = betterproto.uint64_field(16)
    dirty: int = betterproto.uint64_field(17)
    writeback: int = betterproto.uint64_field(18)
    anon_pages: int = betterproto.uint64_field(19)
    mapped: int = betterproto.uint64_field(20)
    shmem: int = betterproto.uint64_field(21)
    slab: int = betterproto.uint64_field(22)
    s_reclaimable: int = betterproto.uint64_field(23)
    s_unreclaim: int = betterproto.uint64_field(24)
    kernel_stack: int = betterproto.uint64_field(25)
    page_tables: int = betterproto.uint64_field(26)
    nf_sunstable: int = betterproto.uint64_field(27)
    bounce: int = betterproto.uint64_field(28)
    writeback_tmp: int = betterproto.uint64_field(29)
    commit_limit: int = betterproto.uint64_field(30)
    committed_as: int = betterproto.uint64_field(31)
    vmalloc_total: int = betterproto.uint64_field(32)
    vmalloc_used: int = betterproto.uint64_field(33)
    vmalloc_chunk: int = betterproto.uint64_field(34)
    hardware_corrupted: int = betterproto.uint64_field(35)
    anon_huge_pages: int = betterproto.uint64_field(36)
    shmem_huge_pages: int = betterproto.uint64_field(37)
    shmem_pmd_mapped: int = betterproto.uint64_field(38)
    cma_total: int = betterproto.uint64_field(39)
    cma_free: int = betterproto.uint64_field(40)
    huge_pages_total: int = betterproto.uint64_field(41)
    huge_pages_free: int = betterproto.uint64_field(42)
    huge_pages_rsvd: int = betterproto.uint64_field(43)
    huge_pages_surp: int = betterproto.uint64_field(44)
    hugepagesize: int = betterproto.uint64_field(45)
    direct_map4_k: int = betterproto.uint64_field(46)
    direct_map2_m: int = betterproto.uint64_field(47)
    direct_map1_g: int = betterproto.uint64_field(48)
