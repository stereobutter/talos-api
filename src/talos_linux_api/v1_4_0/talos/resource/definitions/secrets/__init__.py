# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: resource/definitions/secrets/secrets.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto

from ..... import common as ____common__


@dataclass(eq=False, repr=False)
class ApiCertsSpec(betterproto.Message):
    """APICertsSpec describes etcd certs secrets."""

    ca: "____common__.PemEncodedCertificateAndKey" = betterproto.message_field(1)
    client: "____common__.PemEncodedCertificateAndKey" = betterproto.message_field(2)
    server: "____common__.PemEncodedCertificateAndKey" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class CertSanSpec(betterproto.Message):
    """CertSANSpec describes fields of the cert SANs."""

    i_ps: List["____common__.NetIp"] = betterproto.message_field(1)
    dns_names: List[str] = betterproto.string_field(2)
    fqdn: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class EtcdCertsSpec(betterproto.Message):
    """EtcdCertsSpec describes etcd certs secrets."""

    etcd: "____common__.PemEncodedCertificateAndKey" = betterproto.message_field(1)
    etcd_peer: "____common__.PemEncodedCertificateAndKey" = betterproto.message_field(2)
    etcd_admin: "____common__.PemEncodedCertificateAndKey" = betterproto.message_field(
        3
    )
    etcd_api_server: "____common__.PemEncodedCertificateAndKey" = (
        betterproto.message_field(4)
    )


@dataclass(eq=False, repr=False)
class EtcdRootSpec(betterproto.Message):
    """EtcdRootSpec describes etcd CA secrets."""

    etcd_ca: "____common__.PemEncodedCertificateAndKey" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class KubeletSpec(betterproto.Message):
    """KubeletSpec describes root Kubernetes secrets."""

    endpoint: "____common__.Url" = betterproto.message_field(1)
    ca: "____common__.PemEncodedCertificateAndKey" = betterproto.message_field(2)
    bootstrap_token_id: str = betterproto.string_field(3)
    bootstrap_token_secret: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class KubernetesCertsSpec(betterproto.Message):
    """KubernetesCertsSpec describes generated Kubernetes certificates."""

    api_server: "____common__.PemEncodedCertificateAndKey" = betterproto.message_field(
        1
    )
    api_server_kubelet_client: "____common__.PemEncodedCertificateAndKey" = (
        betterproto.message_field(2)
    )
    front_proxy: "____common__.PemEncodedCertificateAndKey" = betterproto.message_field(
        3
    )
    scheduler_kubeconfig: str = betterproto.string_field(4)
    controller_manager_kubeconfig: str = betterproto.string_field(5)
    localhost_admin_kubeconfig: str = betterproto.string_field(6)
    admin_kubeconfig: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class KubernetesRootSpec(betterproto.Message):
    """KubernetesRootSpec describes root Kubernetes secrets."""

    name: str = betterproto.string_field(1)
    endpoint: "____common__.Url" = betterproto.message_field(2)
    local_endpoint: "____common__.Url" = betterproto.message_field(3)
    cert_sa_ns: List[str] = betterproto.string_field(4)
    dns_domain: str = betterproto.string_field(6)
    ca: "____common__.PemEncodedCertificateAndKey" = betterproto.message_field(7)
    service_account: "____common__.PemEncodedKey" = betterproto.message_field(8)
    aggregator_ca: "____common__.PemEncodedCertificateAndKey" = (
        betterproto.message_field(9)
    )
    aescbc_encryption_secret: str = betterproto.string_field(10)
    bootstrap_token_id: str = betterproto.string_field(11)
    bootstrap_token_secret: str = betterproto.string_field(12)
    secretbox_encryption_secret: str = betterproto.string_field(13)
    api_server_ips: List["____common__.NetIp"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class OsRootSpec(betterproto.Message):
    """OSRootSpec describes operating system CA."""

    ca: "____common__.PemEncodedCertificateAndKey" = betterproto.message_field(1)
    cert_sani_ps: List["____common__.NetIp"] = betterproto.message_field(2)
    cert_sandns_names: List[str] = betterproto.string_field(3)
    token: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class TrustdCertsSpec(betterproto.Message):
    """TrustdCertsSpec describes etcd certs secrets."""

    ca: "____common__.PemEncodedCertificateAndKey" = betterproto.message_field(1)
    server: "____common__.PemEncodedCertificateAndKey" = betterproto.message_field(2)
