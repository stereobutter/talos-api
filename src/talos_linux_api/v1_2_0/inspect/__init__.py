# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: inspect/inspect.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import (
    TYPE_CHECKING,
    Dict,
    List,
    Optional,
)

import betterproto
import grpclib
from betterproto.grpc.grpclib_server import ServiceBase

from .. import common as _common__


if TYPE_CHECKING:
    import grpclib.server
    from betterproto.grpc.grpclib_client import MetadataLike
    from grpclib.metadata import Deadline


class DependencyEdgeType(betterproto.Enum):
    OUTPUT_EXCLUSIVE = 0
    OUTPUT_SHARED = 3
    INPUT_STRONG = 1
    INPUT_WEAK = 2
    INPUT_DESTROY_READY = 4


@dataclass(eq=False, repr=False)
class ControllerRuntimeDependency(betterproto.Message):
    """
    The ControllerRuntimeDependency message contains the graph of controller-
    resource dependencies.
    """

    metadata: "_common__.Metadata" = betterproto.message_field(1)
    edges: List["ControllerDependencyEdge"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ControllerRuntimeDependenciesResponse(betterproto.Message):
    messages: List["ControllerRuntimeDependency"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ControllerDependencyEdge(betterproto.Message):
    controller_name: str = betterproto.string_field(1)
    edge_type: "DependencyEdgeType" = betterproto.enum_field(2)
    resource_namespace: str = betterproto.string_field(3)
    resource_type: str = betterproto.string_field(4)
    resource_id: str = betterproto.string_field(5)


class InspectServiceStub(betterproto.ServiceStub):
    async def controller_runtime_dependencies(
        self,
        betterproto_lib_google_protobuf_empty: "betterproto_lib_google_protobuf.Empty",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "ControllerRuntimeDependenciesResponse":
        return await self._unary_unary(
            "/inspect.InspectService/ControllerRuntimeDependencies",
            betterproto_lib_google_protobuf_empty,
            ControllerRuntimeDependenciesResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )


class InspectServiceBase(ServiceBase):
    async def controller_runtime_dependencies(
        self,
        betterproto_lib_google_protobuf_empty: "betterproto_lib_google_protobuf.Empty",
    ) -> "ControllerRuntimeDependenciesResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def __rpc_controller_runtime_dependencies(
        self,
        stream: "grpclib.server.Stream[betterproto_lib_google_protobuf.Empty, ControllerRuntimeDependenciesResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.controller_runtime_dependencies(request)
        await stream.send_message(response)

    def __mapping__(self) -> Dict[str, grpclib.const.Handler]:
        return {
            "/inspect.InspectService/ControllerRuntimeDependencies": grpclib.const.Handler(
                self.__rpc_controller_runtime_dependencies,
                grpclib.const.Cardinality.UNARY_UNARY,
                betterproto_lib_google_protobuf.Empty,
                ControllerRuntimeDependenciesResponse,
            ),
        }
